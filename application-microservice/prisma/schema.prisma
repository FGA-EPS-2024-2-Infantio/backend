generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Class {
  id       String    @id @default(cuid())
  name     String
  students Student[]
  disabled Boolean   @default(false)

  disabledAt DateTime?

  teacherId String
  teacher   Teacher @relation(fields: [teacherId], references: [id])

  schoolId String
  school   School @relation(fields: [schoolId], references: [id])

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

enum CategorieType {
  PARCIAL
  INTEGRAL
}

enum ClassType {
  BERCARIO
  CRECHE
  ESCOLA
  REFORCO
}

enum TurnType {
  MATUTINO
  VESPERTINO
}

model Student {
  id                 String        @id @default(cuid())
  name               String
  categorie          CategorieType
  schoolId           String
  school             School        @relation(fields: [schoolId], references: [id])
  isFilled           Boolean       @default(false)
  createdAt          DateTime      @default(now())
  updatedAt          DateTime      @updatedAt
  class              ClassType
  disabled           Boolean       @default(false)
  disabledAt         DateTime?
  turn               TurnType
  cep                String?
  dataNascimento     String?
  endereco           String?
  mae                Json?
  naturalidadeAluno  String?
  observacoes        Json?
  observacoesMedicas Json?
  pai                Json?
  responsaveis       Json?
  classes            Class[]
}

model School {
  id             String   @id @default(cuid())
  name           String
  directorEmail  String
  numberStudents Int
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  classes    Class[]
  students   Student[]
  teachers   Teacher[]
  disabled   Boolean   @default(false)
  disabledAt DateTime?
}

model Teacher {
  id              String   @id @default(cuid())
  name            String
  numberOfClasses Int
  cpf             String   @unique @db.VarChar(14)
  startDate       DateTime @map("start_date")
  classes         Class[]

  schoolId String
  school   School @relation(fields: [schoolId], references: [id])

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("teacher")
}
